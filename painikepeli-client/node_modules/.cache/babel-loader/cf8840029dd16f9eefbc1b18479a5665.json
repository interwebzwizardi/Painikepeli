{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Ville\\\\Documents\\\\KOODAUS\\\\Javascript\\\\Painikepeli\\\\painikepeli-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ville\\\\Documents\\\\KOODAUS\\\\Javascript\\\\Painikepeli\\\\painikepeli-client\\\\src\\\\components\\\\Game\\\\Gamecomponents\\\\PointDisplay.js\";\nimport React, { useState } from \"react\";\nimport './PointDisplay.css';\n\nconst PointDisplay = ({\n  socket\n}) => {\n  const _useState = useState(20),\n        _useState2 = _slicedToArray(_useState, 2),\n        points = _useState2[0],\n        setPoints = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        seconds = _useState4[0],\n        setSeconds = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        minutes = _useState6[0],\n        setMinutes = _useState6[1];\n\n  const _useState7 = useState(10),\n        _useState8 = _slicedToArray(_useState7, 2),\n        nextWin = _useState8[0],\n        setNextWin = _useState8[1];\n  /*Listen for emits*/\n\n\n  socket.on('addPoints', function (clientPoints) {\n    setPoints(clientPoints);\n  });\n  socket.on('updateTimer', function (time) {\n    setSeconds(time.seconds);\n    setMinutes(time.minutes);\n  });\n  socket.on('nextWin', function (roundsTillNext) {\n    setNextWin(roundsTillNext);\n  });\n  socket.on('newRound', function () {\n    setNextWin(10);\n    socket.emit('resetStats', {\n      points: 20\n    });\n  });\n  return React.createElement(\"div\", {\n    id: \"points_container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"PAINIKEPELI\"), React.createElement(\"h1\", {\n    id: \"points\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Sinulla on \", points, \" pistett\\xE4!\"), React.createElement(\"h2\", {\n    id: \"nextWin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, nextWin, \" kierrosta seuraavaan voittoon.\"), React.createElement(\"h2\", {\n    id: \"clock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, minutes, \":\", seconds)));\n};\n\nexport default PointDisplay;","map":{"version":3,"sources":["C:/Users/Ville/Documents/KOODAUS/Javascript/Painikepeli/painikepeli-client/src/components/Game/Gamecomponents/PointDisplay.js"],"names":["React","useState","PointDisplay","socket","points","setPoints","seconds","setSeconds","minutes","setMinutes","nextWin","setNextWin","on","clientPoints","time","roundsTillNext","emit"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,oBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA,oBAEHF,QAAQ,CAAC,EAAD,CAFL;AAAA;AAAA,QAExBG,MAFwB;AAAA,QAEhBC,SAFgB;;AAAA,qBAGDJ,QAAQ,CAAC,CAAD,CAHP;AAAA;AAAA,QAGxBK,OAHwB;AAAA,QAGfC,UAHe;;AAAA,qBAIDN,QAAQ,CAAC,CAAD,CAJP;AAAA;AAAA,QAIxBO,OAJwB;AAAA,QAIfC,UAJe;;AAAA,qBAKDR,QAAQ,CAAC,EAAD,CALP;AAAA;AAAA,QAKxBS,OALwB;AAAA,QAKfC,UALe;AAO9B;;;AAEAR,EAAAA,MAAM,CAACS,EAAP,CAAU,WAAV,EAAuB,UAASC,YAAT,EAAsB;AACzCR,IAAAA,SAAS,CAACQ,YAAD,CAAT;AACH,GAFD;AAIAV,EAAAA,MAAM,CAACS,EAAP,CAAU,aAAV,EAAyB,UAASE,IAAT,EAAc;AACnCP,IAAAA,UAAU,CAACO,IAAI,CAACR,OAAN,CAAV;AACAG,IAAAA,UAAU,CAACK,IAAI,CAACN,OAAN,CAAV;AACH,GAHD;AAKAL,EAAAA,MAAM,CAACS,EAAP,CAAU,SAAV,EAAqB,UAASG,cAAT,EAAwB;AACzCJ,IAAAA,UAAU,CAACI,cAAD,CAAV;AACH,GAFD;AAIAZ,EAAAA,MAAM,CAACS,EAAP,CAAU,UAAV,EAAsB,YAAU;AAC5BD,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAR,IAAAA,MAAM,CAACa,IAAP,CAAY,YAAZ,EAAyB;AACrBZ,MAAAA,MAAM,EAAC;AADc,KAAzB;AAGH,GALD;AAOA,SACI;AAAK,IAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAI,IAAA,EAAE,EAAC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4BA,MAA5B,kBAFJ,EAGI;AAAI,IAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBM,OAAlB,oCAHJ,EAII;AAAI,IAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBF,OAAhB,OAA0BF,OAA1B,CAJJ,CADJ,CADJ;AAUH,CAvCD;;AAyCA,eAAeJ,YAAf","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nimport './PointDisplay.css';\r\n\r\nconst PointDisplay = ({socket}) =>{\r\n\r\n    const[points, setPoints] = useState(20);\r\n    const[seconds, setSeconds] = useState(0);\r\n    const[minutes, setMinutes] = useState(0);\r\n    const[nextWin, setNextWin] = useState(10);\r\n\r\n    /*Listen for emits*/\r\n\r\n    socket.on('addPoints', function(clientPoints){\r\n        setPoints(clientPoints);\r\n    });\r\n\r\n    socket.on('updateTimer', function(time){\r\n        setSeconds(time.seconds);\r\n        setMinutes(time.minutes);\r\n    });\r\n\r\n    socket.on('nextWin', function(roundsTillNext){\r\n        setNextWin(roundsTillNext);\r\n    });\r\n\r\n    socket.on('newRound', function(){\r\n        setNextWin(10);\r\n        socket.emit('resetStats',{\r\n            points:20\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div id=\"points_container\">\r\n            <div>\r\n                <h1 id=\"title\">PAINIKEPELI</h1>\r\n                <h1 id=\"points\">Sinulla on {points} pistett√§!</h1>\r\n                <h2 id=\"nextWin\">{nextWin} kierrosta seuraavaan voittoon.</h2>\r\n                <h2 id=\"clock\">{minutes}:{seconds}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PointDisplay;"]},"metadata":{},"sourceType":"module"}