{"version":3,"sources":["components/Lobby/Lobby.js","components/Game/Gamecomponents/Rules.js","components/Game/Gamecomponents/PointDisplay.js","components/Game/Gamecomponents/PlayButton.js","components/Game/Gamecomponents/Scoreboard.js","components/Game/Gamecomponents/AlertDialog.js","components/Game/Game.js","components/End/End.js","App.js","index.js"],"names":["Lobby","useState","username","setUsername","invalid","setInvalid","id","className","placeholder","type","onChange","event","target","value","onClick","length","preventDefault","notValid","to","Rules","rulesVisible","setRulesVisible","PointDisplay","socket","seconds","setSeconds","minutes","setMinutes","nextWin","setNextWin","output","setOutput","on","clientPoints","pointsGranted","time","roundsTillNext","emit","points","PlayButton","round","Scoreboard","scores","setScores","scoreboard","disconnect","renderHTML","AlertDialog","open","setOpen","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","Game","location","io","connect","gameRound","console","log","useEffect","data","queryString","parse","search","send_username","End","App","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1692b4a0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './lobby.css';\r\n\r\n  const Lobby = () => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [invalid, setInvalid] = useState(false);\r\n\r\n    \r\n    /*Function for executing multiple functions onClick if username doesn't get through\r\n      the validation*/\r\n\r\n    const notValid = (event) =>{\r\n      event.preventDefault();\r\n      setInvalid(true);\r\n    }\r\n\r\n    return (\r\n      <div id=\"lobby_container\">\r\n      <h1 className=\"h1_titles\">PAINIKEPELI</h1>\r\n        <div>\r\n          <input placeholder=\"Valitse nimimerkki...\" id=\"username_input\" type =\"text\" onChange={\r\n            (event) => setUsername(event.target.value)}/>\r\n          <Link onClick={event => (!username || username.length > 15) ? notValid(event) : null} \r\n            to={`/game?username=${username}`}>\r\n          <button id=\"username_btn\">Liity peliin</button>\r\n          </Link>\r\n        </div>\r\n        {invalid &&\r\n          <div>\r\n          <p className=\"input_error\">Virheellinen syöte! Nimimerkin on oltava 1-15 merkkiä pitkä.</p>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Lobby;\r\n","import React, {useState} from \"react\";\r\n\r\nimport './Rules.css'\r\n\r\nconst Rules = () =>{\r\n\r\n    const [rulesVisible, setRulesVisible] = useState(false);\r\n\r\n    const toggle = () =>{\r\n        setRulesVisible(!rulesVisible)\r\n    };\r\n\r\n    return (\r\n        <div id=\"rules_container\">\r\n            <button id=\"toggle_rules\" onClick={toggle}>SÄÄNNÖT</button>\r\n            {rulesVisible &&\r\n                <div id=\"rules_content\">\r\n                    <div id=\"content_margin\">\r\n                    <h3 id=\"rules_h3\">Pelin säännöt:</h3>\r\n                    <pre id=\"rules_pre\">{`\r\n1. Peliä pelataan klikkaamalla PLAY-\r\n   nappulaa.\r\n\r\n2. Pelaajalla on pelin alussa 20 \r\n   pistettä, ja jokainen painallus\r\n   maksaa pelaajalle yhden pisteen.\r\n\r\n3. Pelaajan on mahdollista voittaa\r\n   pelissä pisteitä painamalla PLAY-\r\n   nappulaa oikealla hetkellä. Pisteet\r\n   jaetaan kierroslaskurin mukaan, joka\r\n   on kaikille pelaajille yhteinen.\r\n\r\n4. Jokainen pelaajien tekemä painallus\r\n   lisää yhden kierroksen kierrolasku-\r\n   riin jonka arvo on salainen. Kier-\r\n   roslaskurin arvo määrää jaetaanko\r\n   pelaajalle pisteitä, sekä kuinka\r\n   paljon pisteitä jaetaan.\r\n\r\n5. Kierroslaskurin joka 10. painal-\r\n   luksella voittaa 5 pistettä, joka\r\n   100. painalluksella 40 pistettä ja\r\n   joka 500. painallus 250 pistettä.\r\n\r\n6. Yksi pelikierros kestää 3 minuuttia,\r\n   jonka jälkeen pelaajien pisteet ja\r\n   kierroslaskuri nollaantuvat. Uusi\r\n   pelikierros alkaa automaattisesti\r\n   vanhan päätyttyä.\r\n\r\n7. Jos pelaajalta loppuvat pisteet,\r\n   annetaan tälle mahdollisuus aloittaa\r\n   alusta 20 pisteellä tai lopettaa\r\n   pelaaminen.\r\n                    `}</pre>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rules;","import React, {useState} from \"react\";\r\n\r\nimport './PointDisplay.css';\r\n\r\nconst PointDisplay = ({socket}) =>{\r\n\r\n    const[seconds, setSeconds] = useState(0);\r\n    const[minutes, setMinutes] = useState(0);\r\n    const[nextWin, setNextWin] = useState(10);\r\n    const[output, setOutput] = useState('Sinulla on 20 pistettä!');\r\n\r\n\r\n    /*Listen for emits*/\r\n\r\n    socket.on('addPoints', function(clientPoints){\r\n        setOutput('Sinulla on ' + clientPoints + ' pistettä!');\r\n    });\r\n\r\n    socket.on('winningRound', function(pointsGranted, clientPoints){\r\n        setOutput('Voitit ' + pointsGranted + ' pistettä! Sinulla on ' + clientPoints + ' pistettä!');\r\n    });\r\n\r\n    socket.on('updateTimer', function(time){\r\n        setSeconds(time.seconds);\r\n        setMinutes(time.minutes);\r\n    });\r\n\r\n    socket.on('nextWin', function(roundsTillNext){\r\n        setNextWin(roundsTillNext);\r\n    });\r\n\r\n    socket.on('newRound', function(){\r\n        setNextWin(10);\r\n        socket.emit('resetStats',{\r\n            points:20\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div id=\"points_container\">\r\n            <div>\r\n                <h1 id=\"title\">PAINIKEPELI</h1>\r\n                <div><h1 className=\"points\">{output}</h1></div>\r\n                <h2 id=\"nextWin\">{nextWin} kierrosta seuraavaan voittoon.</h2>\r\n                <h2 id=\"clock\">{minutes}:{seconds}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PointDisplay;","import React from \"react\";\r\n\r\nimport './PlayButton.css';\r\n\r\nconst PlayButton = ({socket}) =>{\r\n\r\n    function user_click(){\r\n        socket.emit('userClick',{\r\n            round: 1\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div id=\"button_container\">\r\n            <button id=\"play_button\" onClick={user_click}>PLAY</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayButton;","import React, {useState} from \"react\";\r\nimport renderHTML from 'react-render-html';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport './Scoreboard.css'\r\n\r\nconst Scoreboard = ({socket}) =>{\r\n\r\n    const [scores, setScores] = useState('');\r\n\r\n    /*Listen for emits*/\r\n\r\n    socket.on('update_scoreboard', function(scoreboard){\r\n        setScores(scoreboard);\r\n    });\r\n\r\n    socket.on('newRound', function(){\r\n        setScores('');\r\n    });\r\n\r\n    /*Method for disconnecting socket*/\r\n    const disconnect = () =>{\r\n        socket.disconnect();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to={`/End`}>\r\n                <button id=\"endgame_btn\" onClick={disconnect}>LOPETA</button>\r\n            </Link>\r\n            <div id=\"scoreboard_content\">\r\n                <h2 id=\"scoreboard_title\">Scoreboard:</h2>\r\n                {renderHTML(scores)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Scoreboard;","import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst AlertDialog = ({socket}) => {\r\n\r\n    const[open, setOpen] = useState(false);\r\n\r\n    socket.on('noPoints', function(){\r\n        setOpen(true);\r\n    });\r\n\r\n    //Action if user chooses not to keep playing\r\n    const closeAD = () =>{\r\n        socket.disconnect();\r\n        setOpen(false);\r\n    }\r\n\r\n    //Action if user chooses to keep on playing\r\n    const continueGame = () =>{\r\n        socket.emit('resetStats', {\r\n            points: 20\r\n          });\r\n\r\n        setOpen(false);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <Dialog open={open}>\r\n                <DialogTitle id=\"alert-dialog-description\">{\"Oho, pisteesi loppuivat!\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                    Haluatko aloittaa alusta ja jatkaa pelaamista?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={continueGame}>\r\n                        Kyllä, haluan jatkaa!\r\n                    </Button>\r\n                    <Link to={`/End`}>\r\n                        <Button onClick={closeAD}>\r\n                            Ei, haluan lopettaa.\r\n                        </Button>\r\n                    </Link>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AlertDialog","import React, { useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nimport Rules from './Gamecomponents/Rules.js';\r\nimport PointDisplay from './Gamecomponents/PointDisplay.js';\r\nimport Playbutton from './Gamecomponents/PlayButton.js';\r\nimport Scoreboard from './Gamecomponents/Scoreboard.js';\r\nimport AlertDialog from './Gamecomponents/AlertDialog.js'\r\n\r\nimport './game.css';\r\n\r\n  const Game = ({location}) => {\r\n\r\n    const endpoint = 'localhost:4000'\r\n\r\n    const socket = io.connect(endpoint);\r\n\r\n    /*EMIT EVENTS*/\r\n    function send_username(username){\r\n        socket.emit('username', {\r\n            username: username\r\n        });\r\n    }\r\n\r\n    /*LISTEN EVENTS*/\r\n    socket.on('userClick', function(gameRound){\r\n        console.log(gameRound);\r\n    });\r\n\r\n    useEffect(() => {\r\n      const data = queryString.parse(location.search);\r\n      const username = data.username;\r\n      console.log('Nimimerkki:' + data.username);\r\n\r\n      send_username(username);\r\n    }, [endpoint, location.search]);\r\n\r\n    return (\r\n      <div id = \"ui_container\">\r\n        <div id=\"rules\">\r\n          <Rules />\r\n        </div>\r\n        <div id=\"app_container\">\r\n          <div id=\"game_container\">\r\n            <PointDisplay socket={socket} />\r\n            <Playbutton socket={socket}/>\r\n          </div>\r\n          <div id=\"scoreboard_container\">\r\n            <Scoreboard socket={socket}/>\r\n          </div>\r\n        </div>\r\n        <div id=\"footer\">\r\n          <p id=\"footer_text\">Made by Ville Jaatinen 2020</p>\r\n        </div>\r\n          <AlertDialog socket ={socket}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Game;\r\n","import React from 'react';\r\n\r\nimport './end.css';\r\n\r\nconst End = () => {\r\n    return (\r\n        <div id=\"end_container\">\r\n            <h1 id=\"end_title\">KIITOS PELAAMISESTA!</h1>\r\n            <p id=\"end_para\">Developed by Ville Jaatinen 2020</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default End;","import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\n/*Import components*/\r\nimport Lobby from './components/Lobby/Lobby';\r\nimport Game from './components/Game/Game';\r\nimport End from './components/End/End';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Route path='/' exact component={Lobby}/>\r\n      <Route path='/game' component={Game}/>\r\n      <Route path='/end' component={End}/>\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}